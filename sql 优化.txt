sql 优化 
	1 少用/禁用 for update  采用乐观锁
    2 select @@innodb_rollback_on_timeout; 默认off 表示不回滚 需要手动开启，innodb 存储引擎在大部分情况下哦度不会对异常进行回滚 (死锁除外 AB-BA 死锁) 
    3 mysql index hit 在优化器进行分析的时候 来强制使优化器不进行各个执行路径的成本分析，
    4 read committed 读取被锁定行的最新一份快照数据  [mvcc]
    5 repeatable read 读取事务开始时的行数据版本	 [mvcc]
    6 覆盖索引
    7 内部XA事务存在于 binlog 和 innodb(redo 日志)之间  binlog 和 redo 日志是通过XA事务来原子写入的 
    8 大事务拆分成小事务 (要做权衡 多次提交的性能不如一次提交)
    9 mysql分布式事务 启用必须将事务隔离级别设置成serializable


如图所示，区别有以下两点：

1. B+树中只有叶子节点会带有指向记录的指针（ROWID），而B树则所有节点都带有，在内部节点出现的索引项不会再出现在叶子节点中。

2. B+树中所有叶子节点都是通过指针连接在一起，而B树不会。

 

B+树的优点：

1. 非叶子节点不会带上ROWID，这样，一个块中可以容纳更多的索引项，一是可以降低树的高度。二是一个内部节点可以定位更多的叶子节点。

2. 叶子节点之间通过指针来连接，范围扫描将十分简单，而对于B树来说，则需要在叶子节点和内部节点不停的往返移动。